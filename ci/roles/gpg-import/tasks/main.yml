---
- become: yes
  block:

  - name: Create temporary directory for keys
    tempfile:
      state: directory
      suffix: gpg-import
    register: temp_dir

  - when: "'public_key_path' in gpg_import"
    block:

    - name: Copy public key into the remote
      copy:
        src: "{{ gpg_import.public_key_path }}"
        dest: "{{ temp_dir.path }}/{{ gpg_import.public_key_path | basename }}"

    - name: Import GPG public keys 
      shell: >-
        gpg 
        --allow-secret-key-import 
        --import {{ temp_dir.path }}/{{ gpg_import.public_key_path | basename }}
      register: r
      changed_when: "'not changed' not in r.stderr" 

  - when: "'private_key_path' in gpg_import"
    block:

    - name: Copy private key into the remote
      copy:
        src: "{{ gpg_import.private_key_path }}"
        dest: "{{ temp_dir.path }}/{{ gpg_import.private_key_path | basename }}"

    - name: Import GPG private keys
      shell: >-
        gpg 
        --batch 
        {% if 'private_key_passphrase' in gpg_import %}
        --passphrase {{ gpg_import.private_key_passphrase }} 
        --pinentry-mode loopback 
        {% endif %}
        --import {{ temp_dir.path }}/{{ gpg_import.private_key_path | basename }}
      register: r
      changed_when: "'not changed' not in r.stderr"    
      when: "'private_key_path' in gpg_import"

  - name: Import ownertrust
    command: gpg --import-ownertrust {{ gpg_import.ownertrust_file_path }}
    changed_when: output is defined and output.stdout != ""
    when: "'ownertrust_file_path' in gpg_import"

  - name: Trust the key
    ansible.builtin.expect:
      command: gpg --edit-key {{ gpg_import.key_uid }} --yes trust quit
      responses:
        (.*)Your decision?(.*): "5"
        (.*)Do you really want to set this key to ultimate trust(.*): "y"
    when: "'key_uid' in gpg_import"

  always:

  - name: Delete temp directory
    file:
      path: "{{ temp_dir.path }}"
      state: absent